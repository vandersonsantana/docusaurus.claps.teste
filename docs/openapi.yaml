openapi: 3.0.0
info:
  version: 1.0.0
  title: Claps api
  termsOfService: "https://claps.com.br/"
  contact:
    name: Claps API Suporte 
    email: desenvolvimento@claps.com.br
  x-logo:
    url: "https://sandbox.claps.tec.br/assets/images/logotipo-claps.svg"
    altText: Claps logo
  description: |
    # Autenticação
    A autenticação para as rotas são feitas utilizando JWT, podendo em algumas rotas, ser solicitada a `chave_acesso` do produtor, para verificação de chave dupla.
    Em caso do token ser inválido será retornado um status code `403 - Forbidden` com a mensagem:
    ~~~~
    {
      "message": "403 - Sem permissão"
    }
    ~~~~
    <!-- ReDoc-Inject: <security-definitions> -->  

    # Header
    As requisições necessitam do envio dos parâmetros abaixo no header.
    ### `origin`
    Para todas as requisições desta API é necessário o envio do parâmetro `origin` , o não envio deste parâmetro trará como retorno o status code `403 - Forbidden` seguido das seguintes informações:
    ~~~~
    "erro":
      {
        "codigo": "AcessoNaoAutorizado",
        "mensagem": "Acesso não autorizado."
      }
    ~~~~
    ### `Authorization`
    Para as requisições onde seja necessário o envio do parâmetro `Authorization` , o não envio deste parâmetro trará como retorno o status code `403 - Forbidden` seguido das seguintes informações:
    ~~~~
    "erro":
      {
        "codigo": "AcessoNaoAutorizado",  
        "mensagem": "Acesso não autorizado."
      }
    ~~~~
    ### `recaptcha-token`
    Para as requisições onde seja necessário o envio do parâmetro `recaptcha-token`, o não envio deste parâmetro trará como retorno o status code `412 - Precondition Failed` seguido das seguintes informações:
    ~~~~
    "erro":
      {
        "codigo": "ValidarCaptcha",
        "mensagem": "Captcha incorreto."
      }
    ~~~~

    # Validação de campos nos dados de entrada
    O Claps API valida cada um dos campos enviados na requisição antes de prosseguir com a criação, consulta ou gerenciamento dos pedidos, transações e recursos.

    Caso um ou mais campos não sejam validados, será retornado o status code `422 - Unprocessable Entity` e o corpo da resposta conterá o nome dos campos como chave e um array de string descrevendo o erro pra cada campo, como visto abaixo.
    ~~~~
    {
      "campo_errado_1": ["Descrição do erro do campo 1"],
      "campo_errado_2": ["Descrição do erro do campo 2"]
    }
    ~~~~
    # Paginação
    Em rotas que possuem paginação, as respostas descritas aqui na documentação serão encapsuladas na seguinte estrutura:
    ~~~~
    {
      "total_registros": 0,
      "total_paginas": 0,
      "registros": [
        {resposta descrita na funcionalidade}
      ],
      "extra" : {
        campos comuns caso existam, será descrito na rota se existem e quais são utilizados.
        Caso não exista, não será enviado
      }
    }
    ~~~~

    # Filtros de consulta

    As rotas que retonam listas de elementos e permitem filtragem utilizam o padrão **LHS Brackets**. Segue tabela de notação.

    | Operador | Notação Bracket |
    | -------  | --------        |
    | N/A      | [range]         |
    | N/A      | [like]          |
    | =        | [eq]            |
    | !=       | [ne]            |
    | >        | [gt]            |
    | >=       | [gte]           |
    | <        | [lt]            |
    | <=       | [lte]           |

    #### Exemplo
    ```
        https://api.claps.com.br/objeto?nome[eq]=Jose
    ```
    # Mensagens
    [Aqui](/doc/mensagens/#section/Mensagens) você encontra a listagem de todos os possíveis códigos de retorno e as suas respectivas mensagens que são retornadas pelo Claps.
servers:
  - url: https://api.claps.com.br
    description: Produção
  - url: https://apisandbox.claps.com.br
    description: Sandbox
  - url: https://apidev.claps.com.br
    description: Integração Interna
  - url: https://apihg.claps.com.br
    description: Homologação Gestora
x-tagGroups:
  - name: Geral
    tags:
      - Autenticação
      - Menus
      - Perfis
      - Usuários
      - Nacionalidades
      - Seguradoras
      - Corretoras
      - Estipulantes
      - Canais de Distribuição
      - Unidades de Venda
      - Canais de Venda
      - Parceiros
      - Clientes
      - Bancos
      - Estados Civis
      - Orgãos Emissores
      - UFs
      - Assistenciadoras
      - Produtos
      - Produtos Distrbuição
      - Métodos de Pagamentos
      - Solicitações de Cancelamento
      - Contratos
      - Pessoas Jurídicas
      - Pessoas
      - Apólices
      - Políticas de Comissionamentos
      - Serviço
      - Cobrança
      - Origens
paths:
  /autenticacao/servico/login:
    post:
      tags:
        - Autenticação
      summary: Login Serviço
      description: Login Serviço
      operationId: login-servico-externo
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/LoginClientResponse"
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "clientId",
                                "mensagem": "'Client Id' deve ser informado.",
                              },
                              {
                                "nome": "secretKey",
                                "mensagem": "'Secret Key' deve ser informado.",
                              },
                            ],
                        },
                    }
        "401":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro401"
              examples:
                dadosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "AcessoNegado",
                          "mensagem": "Client id ou secret key inválidos.",
                        },
                    }
                clientBloqueado:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "AcessoNegado",
                          "mensagem": "Cliente inativo ou bloqueado.",
                        },
                    }
                clienteInvalido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "Clienteinvalido",
                          "mensagem": "Cliente não encontrado.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginClientRequest"
        required: true
  /autenticacao/login:
    post:
      tags:
        - Autenticação
      summary: Login Usuário
      description: Login Usuário
      operationId: login-usuario
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/LoginResponse"
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "usuario",
                                "mensagem": "'Usuario' deve ser informado.",
                              },
                              {
                                "nome": "senha",
                                "mensagem": "'Senha' deve ser informado.",
                              },
                            ],
                        },
                    }
        "401":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro401"
              examples:
                acessoNegado:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "AcessoNegado",
                          "mensagem": "Usuário ou senha inválidos.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: string
                senha:
                  type: string
        required: true
  /autenticacao/logout:
    post:
      tags:
        - Autenticação
      summary: Logout Usuário
      description: Logout Usuário
      operationId: logout-usuario
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "401":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro401"
              examples:
                acessoNegado:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "AcessoNegado",
                          "mensagem": "Usuário ou senha inválidos.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
          - bearerAuth: []
  /autenticacao/alterar-senha:
    patch:
      tags:
        - Autenticação
      summary: Alterar senha
      description: alterar senha
      operationId: alterar-senha
      requestBody:
        content:
            application/json:
              schema:
                type: object
                properties:
                  usuario:
                    description: Nome de usuário
                    type: string
                  senhaAtual:
                    type: string
                    description: Senha atual do usuário
                  senha:
                    type: string
                    description: Nova senha a ser cadastrada
                  confirmacaoSenha:
                    type: string
                    description: Confirmação da nova senha a ser cadastrada
                required:
                  - usuario
                  - senhaAtual
                  - senha
                  - confirmacaoSenha
      responses:
        "204":
          description: sucesso
          headers: {}
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                falha no sistema de autenticação:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SistemaAutenticacao",
                          "mensagem": "Falha no sistema de autenticação.",
                        },
                    }
                status já definido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "AlterarStatusUsuario",
                          "mensagem": "Status já definido.",
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UsuarioInexistente",
                          "mensagem": "Usuário inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /autenticacao/solicitar-recuperacao-senha:
    post:
        tags:
          - Autenticação
        summary: Solicitar recuperação de senha
        description: solicitar recuperacao senha
        operationId: solicitar-recuperacao-senha
        requestBody:
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    usuario:
                      description: Nome de usuário
                      type: string
                    celular:
                        type: string
                        description: Número de celular para o envio do código para a recuperação da senha
                  required:
                    - usuario
                    - celular

        responses:
          "204":
            description: sucesso
            headers: {}
          "400":
            description: argumentos inválidos.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro400"
                examples:
                  falha no sistema de autenticação:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "SistemaAutenticacao",
                            "mensagem": "Falha no sistema de autenticação.",
                          },
                      }
                  status já definido:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "AlterarStatusUsuario",
                            "mensagem": "Status já definido.",
                          },
                      }
          "403":
            description: acesso não autorizado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro403"
          "404":
            description: não encontrado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro404"
                examples:
                  usuário inexistente:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "UsuarioInexistente",
                            "mensagem": "Usuário inexistente.",
                          },
                      }
          "500":
            description: comportamento inesperado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro500"
        security:
          - bearerAuth: []
  /autenticacao/recuperar-senha:
    patch:
        tags:
          - Autenticação
        summary: Recuperar senha
        description: recuperar senha
        operationId: recuperar-senha
        requestBody:
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    usuario:
                      description: Nome de usuário
                      type: string
                    senhaAtual:
                        type: string
                        description: Senha atual do usuário
                    senha:
                      type: string
                      description: Nova senha a ser cadastrada
                    confirmacaoSenha:
                      type: string
                      description: Confirmação da nova senha a ser cadastrada
                  required:
                    - usuario
                    - senhaAtual
                    - senha
                    - confirmacaoSenha
        responses:
          "204":
            description: sucesso
            headers: {}
          "400":
            description: argumentos inválidos.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro400"
                examples:
                  falha no sistema de autenticação:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "SistemaAutenticacao",
                            "mensagem": "Falha no sistema de autenticação.",
                          },
                      }
                  status já definido:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "AlterarStatusUsuario",
                            "mensagem": "Status já definido.",
                          },
                      }
          "403":
            description: acesso não autorizado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro403"
          "404":
            description: não encontrado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro404"
                examples:
                  usuário inexistente:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "UsuarioInexistente",
                            "mensagem": "Usuário inexistente.",
                          },
                      }
          "500":
            description: comportamento inesperado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro500"
        security:
          - bearerAuth: []
  /autenticacao/gerar-codigo:
    post:
        tags:
          - Autenticação
        summary: Gerar código validação
        description: Gerar código validação
        operationId: gerar-codigo-validacao
        requestBody:
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    cpf:
                      description: Cpf do usuário
                      type: string
                  required:
                    - cpf
        responses:
          "201":
            description: sucesso
            content:
              application/json:
                schema:
                  properties:
                    dados:
                      type: array
                      items:
                        "$ref": "#/components/schemas/CodigoConfirmacaoResponse"
          "404":
            description: não encontrado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro404"
                examples:
                  usuário inexistente:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "UsuarioInexistente",
                            "mensagem": "Usuário inexistente.",
                          },
                      }
          "500":
            description: comportamento inesperado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro500"
  /autenticacao/confirmar-codigo:
    post:
        tags:
          - Autenticação
        summary: Confirmar código validação
        description: Confirmar código validação
        operationId: confirmar-codigo-validacao
        requestBody:
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    cpf:
                      description: Cpf do usuário
                      type: string
                    codigo:
                      description: Código de validação
                      type: string
                  required:
                    - cpf
                    - codigo
        responses:
          "201":
            description: sucesso
            content:
              application/json:
                schema:
                  properties:
                    dados:
                      type: array
                      items:
                        "$ref": "#/components/schemas/CodigoConfirmacaoResponse"
          "404":
            description: não encontrado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro404"
                examples:
                  usuário inexistente:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "UsuarioInexistente",
                            "mensagem": "Usuário inexistente.",
                          },
                      }
          "500":
            description: comportamento inesperado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro500"                  
  /menus:
    get:
      tags:
        - Menus
      summary: Listar Menus
      description: listar menus.
      operationId: listar-menus
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MenuResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /perfis:
    get:
      tags:
        - Perfis
      summary: Listar Perfis
      description: listar perfis.
      operationId: listar-perfis
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/PerfilResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /perfis/{perfilId}/scopes:
    get:
      tags:
        - Perfis
      summary: Listar Permissões
      description: listar permissões.
      operationId: listar-permissoes
      parameters:
        - name: perfilId
          in: path
          description: Id do perfil
          required: true
          schema:
            allOf:
              - $ref: "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ScopeResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /usuarios:
    get:
      tags:
        - Usuários
      summary: Listar Usuários
      description: listar usuários.
      operationId: listar-usuarios
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/UsuarioResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    post:
      tags:
        - Usuários
      summary: Cadastrar Usuário
      description: cadastrar Usuário
      operationId: cadastrar-usuario
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UsuarioRequest"
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        id:
                          description: Id do usuário
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "nome",
                                "mensagem": "'Nome' deve ser informado.",
                              },
                              {
                                "nome": "cpf",
                                "mensagem": "'Cpf' deve ser informado.",
                              },
                              {
                                "nome": "celular",
                                "mensagem": "'Celular' deve ser informado.",
                              },
                              {
                                "nome": "email",
                                "mensagem": "'Email' deve ser informado.",
                              },
                              {
                                "nome": "perfisIds",
                                "mensagem": "'Perfis Ids' deve ser informado.",
                              },
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                cadastroUsuario:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CadastroUsuario",
                          "mensagem": "Usuário existe no autenticador, mas não existe no autorizador.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /usuarios/{usuarioId}:
    get:
      tags:
        - Usuários
      summary: Obter usuário
      description: obter usuário
      operationId: obter-usuario
      parameters:
        - name: usuarioId
          in: path
          description: Id do usuário
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/UsuarioDetalhe"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UsuarioInexistente",
                          "mensagem": "Usuário inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    put:
      tags:
        - Usuários
      summary: Atualizar Usuário
      description: atualizar usuário
      operationId: atualizar-usuario
      parameters:
        - name: usuarioId
          in: path
          description: Id do usuário
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UsuarioAtualizarRequest"
      responses:
        "204":
          description: sucesso
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "nome",
                                "mensagem": "'Nome' deve ser informado.",
                              },
                              {
                                "nome": "celular",
                                "mensagem": "'Celular' deve ser informado.",
                              },
                              {
                                "nome": "email",
                                "mensagem": "'Email' deve ser informado.",
                              },
                              {
                                "nome": "perfisIds",
                                "mensagem": "'Perfis Ids' deve ser informado.",
                              },
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /usuarios/cpf/{cpf}:
    get:
      tags:
        - Usuários
      summary: Obter usuário por cpf
      description: obter usuário por cpf
      operationId: obter-usuarios-cpf
      parameters:
        - name: cpf
          in: path
          description: CPF do usuário
          required: true
          schema:
            type: string
            format: number
            maxLength: 11
            minLength: 11
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/UsuarioBuscaCpfResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UsuarioInexistente",
                          "mensagem": "Usuário inexistente.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CadastroUsuario",
                          "mensagem": "CPF informado já cadastrado.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /usuarios/{usuarioId}/ativar:
    patch:
      tags:
        - Usuários
      summary: Ativar usuário
      description: ativar usuário
      operationId: ativar-usuario
      parameters:
        - name: usuarioId
          in: path
          description: Id do usuário
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                falha no sistema de autenticação:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SistemaAutenticacao",
                          "mensagem": "Falha no sistema de autenticação.",
                        },
                    }
                status já definido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "AlterarStatusUsuario",
                          "mensagem": "Status já definido.",
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UsuarioInexistente",
                          "mensagem": "Usuário inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /usuarios/{usuarioId}/inativar:
    patch:
      tags:
        - Usuários
      summary: Inativar usuário
      description: inativar usuário
      operationId: inativar-usuario
      parameters:
        - name: usuarioId
          in: path
          description: Id do usuário
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                falha no sistema de autenticação:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SistemaAutenticacao",
                          "mensagem": "Falha no sistema de autenticação.",
                        },
                    }
                status já definido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "AlterarStatusUsuario",
                          "mensagem": "Status já definido.",
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UsuarioInexistente",
                          "mensagem": "Usuário inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /usuarios/cpf/{cpf}/dados-auto-contratacao:
    get:
        tags:
          - Usuários
        summary: Obter dados para auto contratação
        description: Obter dados para auto contratação
        operationId: dados-auto-contratacao
        parameters:
          - name: cpf
            in: path
            description: CPF do usuário
            required: true
            schema:
              type: string
              format: number
              maxLength: 11
              minLength: 11
        responses:
          "200":
            description: sucesso
            content:
              application/json:
                schema:
                  properties:
                    dados:
                      type: array
                      items:
                        "$ref": "#/components/schemas/DadosUsuarioAutoContratacao"
          "404":
            description: não encontrado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro404"
                examples:
                  usuário inexistente:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "UsuarioInexistente",
                            "mensagem": "Usuário inexistente.",
                          },
                      }
          "500":
            description: comportamento inesperado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro500"  
  /usuarios/cadastro/completo:
    post:
      tags:
        - Usuários
      summary: Cadastrar Usuário completo
      description: Cadastrar usuário com senha
      operationId: cadastrar-usuario-completo
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UsuarioCadastroComSenha"
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        id:
                          description: Id do usuário
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "nome",
                                "mensagem": "'Nome' deve ser informado.",
                              },
                              {
                                "nome": "cpf",
                                "mensagem": "'Cpf' deve ser informado.",
                              },
                              {
                                "nome": "celular",
                                "mensagem": "'Celular' deve ser informado.",
                              },
                              {
                                "nome": "email",
                                "mensagem": "'Email' deve ser informado.",
                              },                                                           
                              {
                                "nome": "senha",
                                "mensagem": "'Senha' deve ser informado.",
                              },
                              {
                                "nome": "confirmacaSenha",
                                "mensagem": "'Confirmacao Senha' deve ser informado.",
                              }
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                cadastroUsuario:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CadastroUsuario",
                          "mensagem": "Usuário existe no autenticador, mas não existe no autorizador.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"  
  /usuarios/cpf/{cpf}/vincular-origem-atual:
    post:
        tags:
          - Usuários
        summary: Vincular origem atual
        description: Vincular usuário a origem atual
        operationId: vincular-origem-atual
        parameters:
          - name: cpf
            in: path
            description: CPF do usuário
            required: true
            schema:
              type: string
              format: number
              maxLength: 11
              minLength: 11
        responses:
          "204":
            description: sucesso
            headers: {}
          "404":
            description: não encontrado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro404"
                examples:
                  usuário inexistente:
                    value:
                      {
                        "erro":
                          {
                            "codigo": "UsuarioInexistente",
                            "mensagem": "Usuário inexistente.",
                          },
                      }
          "500":
            description: comportamento inesperado.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/Erro500" 
  /nacionalidades:
    get:
      tags:
        - Nacionalidades
      summary: Listar Nacionalidades
      description: listar nacionalidades.
      operationId: listar-nacionalidades
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/NacionalidadeResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /seguradoras:
    get:
      tags:
        - Seguradoras
      summary: Listar Seguradoras
      description: listar seguradoras
      operationId: listar-seguradoras
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/SeguradoraResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /corretoras:
    get:
      tags:
        - Corretoras
      summary: Listar Corretoras
      description: listar corretoras
      operationId: listar-corretoras
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CorretoraResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /estipulantes:
    get:
      tags:
        - Estipulantes
      summary: Listar Estipulantes
      description: listar estipulantes
      operationId: listar-estipulantes
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/EstipulanteResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canais-distribuicao:
    get:
      tags:
        - Canais de Distribuição
      summary: Listar Canais de Distribuição
      description: listar canais de distribuição
      operationId: listar-canais-distribuicao
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CanalDistribuicaoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    post:
      tags:
        - Canais de Distribuição
      summary: Cadastrar Canal de Distribuição
      description: cadastrar canal de distribuição
      operationId: cadastrar-canal-distribuicao
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CanalDistribuicaoRequest"
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        id:
                          description: Id
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canais-distribuicao/{canalDistribuicaoId}:
    get:
      tags:
        - Canais de Distribuição
      summary: Obter Canal de Distribuição
      description: obter Canal de Distribuição
      operationId: obter-canal-distribuicao
      parameters:
        - name: canalDistribuicaoId
          in: path
          description: Id do canal de distribuição
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CanalDistribuicaoDetalheResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalDistribuicaoInexistente",
                          "mensagem": "Canal de Distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    put:
      tags:
        - Canais de Distribuição
      summary: Atualizar Canal de Distribuição
      description: atualizar canal de distribuição
      operationId: atualizar-canal-distribuicao
      parameters:
        - name: canalDistribuicaoId
          in: path
          description: Id do canal de distribuição
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CanalDistribuicaoAtualziarRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "nome",
                                "mensagem": "'Nome' deve ser informado.",
                              },
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                unidade de venda inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalDistribuicaoInexistente",
                          "mensagem": "Canal de Distribuição inexistente.",
                        },
                    }
                canal de distribuição inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalDistribuicaoInexistente",
                          "mensagem": "Canal de Distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canais-distribuicao/{canalDistribuicaoId}/ativar:
    patch:
      tags:
        - Canais de Distribuição
      summary: Ativar Canal de Distribuição
      description: ativar canal de distribuição
      operationId: ativar-canal-distribuicao
      parameters:
        - name: canalDistribuicaoId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalDistribuicaoInexistente",
                          "mensagem": "Canal de Distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canais-distribuicao/{canalDistribuicaoId}/inativar:
    patch:
      tags:
        - Canais de Distribuição
      summary: Inativar Canal de Distribuição
      description: inativar canal de distribuição
      operationId: inativar-canal-distribuicao
      parameters:
        - name: canalDistribuicaoId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalDistribuicaoInexistente",
                          "mensagem": "Canal de Distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canais-distribuicao/{canalDistribuicaoId}/unidades-venda:
    post:
      tags:
        - Unidades de Venda
      summary: Cadastrar Unidade de venda
      description: cadastrar unidade de venda
      operationId: cadastrar-unidade-venda
      parameters:
        - name: canalDistribuicaoId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UnidadeVendaCadastroRequest"
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        id:
                          description: Id
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "descricao",
                                "mensagem": "'Descricao' deve ser informado.",
                              },
                              {
                                "nome": "nome",
                                "mensagem": "'Nome' deve ser informado.",
                              },
                              {
                                "nome": "tipo",
                                "mensagem": "'Tipo' deve ser informado.",
                              },
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canais-venda/{canalVendaId}:
    delete:
      tags:
        - Canais de Venda
      summary: Deletar Canal de Venda
      description: deletar canal de venda
      operationId: deletar-canal-venda
      parameters:
        - name: canalVendaId
          in: path
          description: Id do canal de venda
          required: true
          schema:
            allOf:
              - $ref: "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalVendaInexistente",
                          "mensagem": "Canal de Venda inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    put:
      tags:
        - Canais de Venda
      summary: Atualizar Canal de Venda
      description: atualizar canal de venda
      operationId: atualizar-canal-venda
      parameters:
        - name: canalVendaId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CanalVendaAtualizarRequest"
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalVendaInexistente",
                          "mensagem": "Canal de Venda inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canais-venda/tipos:
    get:
      tags:
        - Canais de Venda
      summary: Listar Tipos de Canais de Venda
      description: listar tipos de canais de venda
      operationId: listar-tipos-canais-venda
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CanalVendaTipoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canal-venda/{canalVendaId}/produtos:
    get:
      tags:
        - Canais de Venda
      summary: Listar Produtos do Canal de Venda
      description: listar produtos do canal de venda
      operationId: listar-produtos-canal-venda
      parameters:
        - name: canalVendaId
          in: path
          description: Id do canal de venda
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoCanalVendaResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /canal-venda/{canalVendaId}/produto/{produtoId}:
    get:
      tags:
        - Canais de Venda
      summary: Obter Canal de Venda e Produto
      description: obter canal de venda e produto
      operationId: obter-canal-venda-produto
      parameters:
        - name: canalVendaId
          in: path
          description: Id do canal de venda
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                 schema:
                    "$ref": "#/components/schemas/CanalDistribuicaoProdutoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /parceiros:
    get:
      tags:
        - Parceiros
      summary: Listar Parceiros
      description: listar parceiros
      operationId: listar-parceiros
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ParceiroResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /cliente:
    post:
      tags:
        - Clientes
      summary: Cadastrar Cliente
      description: cadastrar cliente
      operationId: cadastrar-cliente
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        id:
                          description: Id
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "cliente.Cpf",
                                "mensagem": "'Cliente. Cpf' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Email",
                                "mensagem": "'Cliente. Email' deve ser informado.",
                              },
                              {
                                "nome": "cliente.DataNascimento",
                                "mensagem": "'Cliente. Data Nascimento' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Sexo",
                                "mensagem": "'Cliente. Sexo' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Rg.Numero",
                                "mensagem": "'Cliente. Rg. Numero' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Rg.DataEmissao",
                                "mensagem": "'Cliente. Rg. Data Emissao' deve ser informado.",
                              }
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ClienteRequest"
        required: true
  /cliente/{clienteId}/contratos:
    get:
      tags:
        - Clientes
      summary: Listar Contratos
      description: listar contratos.
      operationId: listar-contratos-cliente
      parameters:
        - name: clienteId
          in: path
          description: Id do cliente
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ContratoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /clientes:
    get:
      tags:
        - Clientes
      summary: Listar Clientes
      description: listar clientes
      operationId: listar-clientes
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ClienteResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /clientes/{clienteId}:
    get:
      tags:
        - Clientes
      summary: Obter Cliente
      description: obter cliente
      operationId: obter-cliente
      parameters:
        - name: clienteId
          in: path
          description: Id do cliente
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ClienteDetalheResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    put:
      tags:
        - Clientes
      summary: Atualizar Cliente
      description: atualizar cliente
      operationId: atualizar-cliente
      parameters:
        - name: clienteId
          in: path
          description: Id do cliente
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ClienteAtualizarRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "cliente.Cpf",
                                "mensagem": "'Cliente. Cpf' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Email",
                                "mensagem": "'Cliente. Email' deve ser informado.",
                              },
                              {
                                "nome": "cliente.DataNascimento",
                                "mensagem": "'Cliente. Data Nascimento' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Sexo",
                                "mensagem": "'Cliente. Sexo' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Rg.Numero",
                                "mensagem": "'Cliente. Rg. Numero' deve ser informado.",
                              },
                              {
                                "nome": "cliente.Rg.DataEmissao",
                                "mensagem": "'Cliente. Rg. Data Emissao' deve ser informado.",
                              },
                              {
                                "nome": "enderecos[0].Cep",
                                "mensagem": "'Cep' deve ser informado.",
                              },
                              {
                                "nome": "enderecos[0].Cep",
                                "mensagem": "'Cep' deve ter no máximo 8 caracteres. Você digitou 0 caracteres.",
                              },
                              {
                                "nome": "enderecos[0].Cidade",
                                "mensagem": "'Cidade' deve ser informado.",
                              },
                              {
                                "nome": "enderecos[0].Estado",
                                "mensagem": "'Estado' deve ser informado.",
                              },
                              {
                                "nome": "enderecos[0].Numero",
                                "mensagem": "'Numero' deve ser informado.",
                              },
                              {
                                "nome": "enderecos[0].Bairro",
                                "mensagem": "'Bairro' deve ser informado.",
                              },
                              {
                                "nome": "enderecos[0].Logradouro",
                                "mensagem": "'Logradouro' deve ser informado.",
                              },
                              {
                                "nome": "enderecos[0].Apelido",
                                "mensagem": "'Apelido' deve ser informado.",
                              },
                              {
                                "nome": "contaBancaria.Numero",
                                "mensagem": "'Numero' deve ser informado.",
                              },
                              {
                                "nome": "contaBancaria.Digito",
                                "mensagem": "'Digito' deve ser informado.",
                              },
                              {
                                "nome": "contaBancaria.Digito",
                                "mensagem": "'Digito' deve ter no máximo 1 caracteres. Você digitou 0 caracteres.",
                              },
                              {
                                "nome": "contaBancaria.Agencia",
                                "mensagem": "'Agencia' deve ser informado.",
                              },
                              {
                                "nome": "cliente.CargoPep",
                                "mensagem": "'Cliente. Cargo Pep' deve ser informado.",
                              },
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                unidade de venda inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UnidadeVendaInexistente",
                          "mensagem": "Unidade de Venda inexistente.",
                        },
                    }
                canal de distribuição inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalDistribuicaoInexistente",
                          "mensagem": "Canal de Distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /clientes/cpf/{cpf}:
    get:
      tags:
        - Clientes
      summary: Obter por Cpf
      description: obter as informações de um cliente através do seu cpf
      operationId: obter-cliente-cpf
      parameters:
        - name: cpf
          in: path
          description: Cpf do cliente
          required: true
          schema:
            "$ref": "#/components/schemas/Cpf"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ClienteDetalheResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /clientes/{clienteId}/ativar:
    patch:
      tags:
        - Clientes
      summary: Ativar Cliente
      description: Ativar Cliente
      operationId: ativar-cliente
      parameters:
        - name: clienteId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /clientes/{clienteId}/inativar:
    patch:
      tags:
        - Clientes
      summary: Inativar Cliente
      description: inativar cliente
      operationId: inativar-cliente
      parameters:
        - name: clienteId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /cobranca/confirmar:
    post:
      tags:
        - Cobrança
      summary: Confirmar cobrança recorrente
      description: confirmar cobrança recorrente
      operationId: confirmar-cobranca-recorrente
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CobrancaRecorrenteConfirmarRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /cobranca/link-expirado:
    post:
      tags:
        - Cobrança
      summary: Informar os Links de Cobrança Expirados
      description: informar links de cobranca expirados
      operationId: informar-links-expirados
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CobrancaInformarLinkExpiradoRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
  /origens/auto-contratacao-disponivel:
    get:
      tags:
        - Origens
      summary: Confirmar origem para autocontratação
      description: Confirmar origem para autocontratação
      operationId: auto-contratacao-disponivel
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        value:
                          allOf:
                            - $ref: "#/components/schemas/Condicional"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
  /bancos:
    get:
      tags:
        - Bancos
      summary: Listar Bancos
      description: listar bancos
      operationId: listar-bancos
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/BancoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /estados-civis:
    get:
      tags:
        - Estados Civis
      summary: Listar Estados civis
      description: listar estados civis
      operationId: listar-estados-civis
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/EstadoCivilResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /orgaos-emissores:
    get:
      tags:
        - Orgãos Emissores
      summary: Listar Orgãos Emissores
      description: listar orgãos emissores
      operationId: listar-orgaos-emissores
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/OrgaoEmissorResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /ufs:
    get:
      tags:
        - UFs
      summary: Listar UFs
      description: listar Ufs.
      operationId: listar-ufs
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/UfResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /assistenciadoras:
    get:
      tags:
        - Assistenciadoras
      summary: Listar Assistenciadoras
      description: listar assistenciadoras
      operationId: listar-assistenciadoras
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AssistenciadoraResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /unidades-venda/{unidadeVendaId}/canais-venda:
    get:
      tags:
        - Canais de Venda
      summary: Listar Canais de Venda
      description: listar canais de venda
      operationId: listar-canais-venda
      parameters:
        - name: unidadeVendaId
          in: path
          description: Id da unidade de venda
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CanalVendaResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    post:
      tags:
        - Canais de Venda
      summary: Cadastrar Canais de Venda
      description: cadastrar canais de venda
      operationId: cadastrar-canais-venda
      parameters:
        - name: unidadeVendaId
          in: path
          description: Id da unidade de venda
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        id:
                          description: Id
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "nome",
                                "mensagem": "'Nome' deve ser informado.",
                              }
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CanalVendaRequest"
        required: true
  /unidades-venda/{unidadeVendaId}:
    get:
      tags:
        - Unidades de Venda
      summary: Obter Unidade de venda
      description: obter unidade de venda.
      operationId: obter-unidade-venda
      parameters:
        - name: unidadeVendaId
          in: path
          description: Id da unidade de venda
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/UnidadeVendaRetorno"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UnidadeVendaInexistente",
                          "mensagem": "Unidade de Venda inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    put:
      tags:
        - Unidades de Venda
      summary: Atualizar Unidade de venda
      description: atualizar unidades de venda.
      operationId: atualizar-unidade-venda
      parameters:
        - name: unidadeVendaId
          in: path
          description: Id da unidade de venda
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UnidadeVendaAtualizarRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "400":
          description: argumentos inválidos.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro400"
              examples:
                argumentosInvalidos:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ArgumentosInvalidos",
                          "mensagem": "Um ou mais erros.",
                          "detalhes":
                            [
                              {
                                "nome": "nome",
                                "mensagem": "'Nome' deve ser informado.",
                              },
                              {
                                "nome": "tipo",
                                "mensagem": "'Tipo' deve ser informado.",
                              },
                              {
                                "nome": "pessoaJuridica.Cnpj",
                                "mensagem": "'Cnpj' deve ser informado.",
                              },
                              {
                                "nome": "pessoaJuridica.NomeFantasia",
                                "mensagem": "'Nome Fantasia' deve ser informado.",
                              },
                              {
                                "nome": "pessoaJuridica.RazaoSocial",
                                "mensagem": "'Razao Social' deve ser informado.",
                              },
                              {
                                "nome": "pessoaJuridica.NomeFantasia",
                                "mensagem": "'Pessoa Juridica. Nome Fantasia' deve ser informado.",
                              },
                              {
                                "nome": "pessoaJuridica.RazaoSocial",
                                "mensagem": "'Pessoa Juridica. Razao Social' deve ser informado.",
                              },
                              {
                                "nome": "endereco.Cidade",
                                "mensagem": "'Endereco. Cidade' deve ser informado.",
                              },
                              {
                                "nome": "endereco.Estado",
                                "mensagem": "'Endereco. Estado' deve ser informado.",
                              },
                              {
                                "nome": "endereco.Numero",
                                "mensagem": "'Endereco. Numero' deve ser informado.",
                              },
                              {
                                "nome": "endereco.Bairro",
                                "mensagem": "'Endereco. Bairro' deve ser informado.",
                              },
                              {
                                "nome": "endereco.Logradouro",
                                "mensagem": "'Endereco. Logradouro' deve ser informado.",
                              },
                            ],
                        },
                    }
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                unidade de venda inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UnidadeVendaInexistente",
                          "mensagem": "Unidade de Venda inexistente.",
                        },
                    }
                canal de distribuição inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "CanalDistribuicaoInexistente",
                          "mensagem": "Canal de Distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /unidades-venda/{unidadeVendaId}/ativar:
    patch:
      tags:
        - Unidades de Venda
      summary: Ativar Unidade de Venda
      description: ativar unidade de venda
      operationId: ativar-unidade-venda
      parameters:
        - name: unidadeVendaId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UnidadeVendaInexistente",
                          "mensagem": "Unidade de Venda inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /unidades-venda/{unidadeVendaId}/inativar:
    patch:
      tags:
        - Unidades de Venda
      summary: Inativar Unidade de Venda
      description: inativar unidade de venda
      operationId: inativar-unidade-venda
      parameters:
        - name: unidadeVendaId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UnidadeVendaInexistente",
                          "mensagem": "Unidade de Venda inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /unidades-venda:
    get:
      tags:
        - Unidades de Venda
      summary: Listar Unidades de Venda
      description: listar unidades de venda.
      operationId: listar-unidades-venda
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/UnidadeVendaResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /tema-parceiro:
    get:
      tags:
        - Parceiros
      summary: Obter Tema Parceiro
      description: obter tema parceiro
      operationId: obter-tema-parceiro
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/TemaParceiroResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /cep/{cep}:
    get:
      tags:
        - Serviço
      summary: Obter Endereço por CEP
      description: Método de listar usuários.
      operationId: obter-endereco-cep
      parameters:
        - name: cep
          in: path
          description: CEP
          required: true
          schema:
            type: string
            format: number
            maxLength: 8
            minLength: 8
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/EnderecoCepResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /metodos-pagamento:
    get:
      tags:
        - Métodos de Pagamentos
      summary: Listar Métodos de Pagamentos
      description: Método de listar usuários.
      operationId: listar-metodos-pagamento
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MetodosPagamentoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produto/{produtoId}/metodos-pagamento:
    get:
      tags:
        - Produtos
      summary: Listar Métodos de Pagamentos
      description: listar métodos de pagamentos do produto
      operationId: listar-metodos-pagamento-produto
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MetodosPagamentoDetalhe"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos:
    get:
      tags:
        - Produtos
      summary: Listar Produtos
      description: listar produto
      operationId: listar-produtos
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    post:
      tags:
        - Produtos
      summary: Cadastrar Produto
      description: cadastrar produto
      operationId: cadastrar-produto
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProdutoRequest"
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        value:
                          description: Id do produto
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos/{produtoId}:
    get:
      tags:
        - Produtos
      summary: Obter Produto
      description: obter produto
      operationId: obter-produto
      parameters:
        - name: produtoId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoDetalheResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    put:
      tags:
        - Produtos
      summary: Atualizar Produto
      description: atualizar produto
      operationId: atualizar-produto
      parameters:
        - name: produtoId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProdutoAtualizarRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                ProdutoInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ProdutoInexistente",
                          "mensagem": "Produto inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produto/{produtoId}/planos:
    get:
      tags:
        - Produtos
      summary: Listar Planos do Produto
      description: listar planos do produto
      operationId: listar-planos-produto
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoPlanoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produto/{produtoId}/planos-coberturas:
    get:
      tags:
        - Produtos
      summary: Listar Planos e Cobertura do Produto
      description: listar planos cobertura do produto
      operationId: listar-planos-cobertura-produto
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoPlanoCoberturaResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos/{produtoId}/ativar:
    patch:
      tags:
        - Produtos
      summary: Ativar Produto
      description: ativar produto
      operationId: ativar-produto
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ProdutoInexistente",
                          "mensagem": "Produto inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos/{produtoId}/inativar:
    patch:
      tags:
        - Produtos
      summary: Inativar Produto
      description: inativar produto
      operationId: inativar-produto
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ProdutoInexistente",
                          "mensagem": "Produto inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos-distribuicao/{produtoDistribuicaoId}/ativar:
    patch:
      tags:
        - Produtos Distrbuição
      summary: Ativar Produto Distribuição
      description: ativar produto distribuição.
      operationId: ativar-produto-distribuicao
      parameters:
        - name: produtoDistribuicaoId
          in: path
          description: Id do produto distribuição
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ProdutoDistribuicaoInexistente",
                          "mensagem": "Produto distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos-distribuicao/{produtoDistribuicaoId}/inativar:
    patch:
      tags:
        - Produtos Distrbuição
      summary: Inativar Produto Distribuição
      description: inativar produto distribuição.
      operationId: inativar-produto-distribuicao
      parameters:
        - name: produtoDistribuicaoId
          in: path
          description: Id do produto distribuição
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ProdutoDistribuicaoInexistente",
                          "mensagem": "Produto distribuição inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos-distribuicao/{produtoDistribuicaoId}:
    delete:
      tags:
        - Produtos Distrbuição
      summary: Deletar Produtos Distrbuição
      description: deletar produto distribuição
      operationId: deletar-produto-distribuicao
      parameters:
        - name: produtoDistribuicaoId
          in: path
          description: Id do produto distribuição
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos/{produtoId}/politicas-comissionamento-secundarias:
    get:
      tags:
        - Produtos
      summary: Listar Políticas de Comissionamento Secundárias
      description: Listar políticas de comissionamento secundárias associadas a um produto
      operationId: listar-politicas-comissionamento-secundarias
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/PoliticaComissionamentoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ProdutoDistribuicaoInexistente",
                          "mensagem": "Produto distribuicao inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos/{produtoId}/distribuir-canal:
    post:
      tags:
        - Produtos
      summary: Cadastrar Canal de Distribuição para um Produto
      description: Cadastrar um canal de distribuição para um produto em uma origem
      operationId: cadastrar-canal-distribuicao-origem
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProdutoCanalDistribuicaoRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    get:
      tags:
        - Produtos
      summary: Listar Canais de Distribuição para um Produto
      description: Listar canais de distribuições para um produto em uma origem
      operationId: listar-canais-distribuicao-produto-origem
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoCanalDistribuicaoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /produtos/{produtoId}/distribuir-parceiro:
    post:
      tags:
        - Produtos
      summary: Cadastrar Distribuição de um Produto
      description: Cadastrar um parceiro que poderá distribuir o produto
      operationId: cadastrar-parceiro
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProdutoDistribuicaoRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    get:
      tags:
        - Produtos
      summary: Listar Distribuições de Produto
      description: Listar distribuições para um produto
      operationId: listar-distribuicoes-produto
      parameters:
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoDistribuicaoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /politicas-comissionamento:
    get:
      tags:
        - Políticas de Comissionamentos
      summary: Listar Políticas de Comissionamentos
      description: listar políticas de comissionamentos
      operationId: listar-politicas-comissionamento
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/PoliticaComissionamentoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contrato/{contratoId}/solicitar-cancelamento:
    post:
      tags:
        - Solicitações de Cancelamento
      summary: Solicitar Cancelamento
      description: solicitar cancelamento
      operationId: solicitar-cancelamento
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        value:
                          description: Id
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ContratoInexistente",
                          "mensagem": "Contrato inexistente.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                status inválido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SolicitacaoStatusInvalido",
                          "mensagem": "Solicitação com status inválido para este tipo de requisição",
                        },
                    }
                em cancelamento:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "EmCancelamento",
                          "mensagem": "Não é possível solicitar cancelamento, existe uma solicitação em aberto.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
        required: true
  /solicitacoes-cancelamento:
    get:
      tags:
        - Solicitações de Cancelamento
      summary: Listar Solicitações de Cancelamento
      description: listar solicitações de cancelamento.
      operationId: listar-solicitacoes-cancelamento
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/SolicitacaoCancelamentoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /solicitacao-cancelamento/{solicitacaoId}/status-aprovacao:
    put:
      tags:
        - Solicitações de Cancelamento
      summary: Aprovar Solicitação de Cancelamento
      description: aprovar solicitação de cancelamento
      operationId: aprovar-solicitação-cancelamento
      parameters:
        - name: solicitacaoId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SolicitacaoInexistente",
                          "mensagem": "Solicitação inexistente.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                solicitacaoStatusInvalido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SolicitacaoStatusInvalido",
                          "mensagem": "Solicitação com status inválido para este tipo de requisição",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
        required: true
  /solicitacao-cancelamento/{solicitacaoId}/status-rejeicao:
    put:
      tags:
        - Solicitações de Cancelamento
      summary: Rejeitar Solicitação de Cancelamento
      description: rejeitar solicitação de cancelamento
      operationId: rejeitar-solicitacao-cancelamento
      parameters:
        - name: solicitacaoId
          in: path
          description: Id
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuário inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SolicitacaoInexistente",
                          "mensagem": "Solicitação inexistente.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                solicitacaoStatusInvalido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SolicitacaoStatusInvalido",
                          "mensagem": "Solicitação com status inválido para este tipo de requisição",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                motivo:
                  type: string
        required: true
  /contrato:
    post:
      tags:
        - Contratos
      summary: Criar Contrato
      description: criar contrato
      operationId: criar-contrato
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        value:
                          description: Id
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                cliente inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
                numero sorte:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "NumeroSorte",
                          "mensagem": "Não existe número da sorte disponível.",
                        },
                    }
                subContrato externo:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SubContratoExterno",
                          "mensagem": "Não existe número de contrato externo disponível.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                status inválido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "JsonRequestInvalido",
                          "mensagem": "Json request inválido.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContratoRequest"
        required: true
  /contratos/auto-contratacao:
    post:
      tags:
        - Contratos
      summary: Criar contrato auto contratação
      description: criar contrato auto contratação
      operationId: criar-contrato-auto-contratacao
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        value:
                          description: Id
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                cliente inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
                numero sorte:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "NumeroSorte",
                          "mensagem": "Não existe número da sorte disponível.",
                        },
                    }
                subContrato externo:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "SubContratoExterno",
                          "mensagem": "Não existe número de contrato externo disponível.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                status inválido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "JsonRequestInvalido",
                          "mensagem": "Json request inválido.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContratoCadastroAutoContratacao"
        required: true      
  /contratos/{contratoId}/auto-contratacao/pagamento:
    post:
      tags:
        - Contratos
      summary: Pagar contrato auto contratação
      description: pagar contrato auto contratação
      operationId: pagar-contrato-auto-contratacao
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                cliente inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                status inválido:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "JsonRequestInvalido",
                          "mensagem": "Json request inválido.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PagamentoContratoAutoContratacao"
        required: true             
  /contratos:
    get:
      tags:
        - Contratos
      summary: Listar Contratos
      description: listar contratos.
      operationId: listar-contratos
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ContratoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contratos/{contratoId}/documentos-contratacao:
    post:
      tags:
        - Contratos
      summary: Gerar Documento do Contrato
      description: gerar documento do contrato
      operationId: gerar-documento-contrato
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                contrato inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ContratoInexistente",
                          "mensagem": "Contrato inexistente.",
                        },
                    }
                cliente inexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteInexistente",
                          "mensagem": "Cliente inexistente.",
                        },
                    }
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                vigência do contrato:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "InicioVigencia",
                          "mensagem": "Vigência do contrato sem data início.",
                        },
                    }
                cadastro cliente incompleto (telefone):
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteTelefone",
                          "mensagem": "Cadastro do cliente incompleto: telefone.",
                        },
                    }
                cadastro cliente incompleto (endereço):
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ClienteEndereco",
                          "mensagem": "Cadastro do cliente incompleto: endereço.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contrato/{contratoId}:
    get:
      tags:
        - Contratos
      summary: Obter Contrato
      description: obter contrato
      operationId: obter-contrato
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ContratoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contrato/{contratoId}/eventos:
    get:
      tags:
        - Contratos
      summary: Listar Eventos
      description: listar eventos
      operationId: listar-eventos
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                      type: object
                      "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/EventoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contrato/{contratoId}/parcelas:
    get:
      tags:
        - Contratos
      summary: Listar Parcelas
      description: listar parcelas
      operationId: listar-parcelas
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                      type: object
                      "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ParcelasResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contratos/{contratoId}/reenvio-cobranca:
    post:
      tags:
        - Contratos
      summary: Reenviar Cobranca
      description: Permite o reenvio de uma cobrança, só é permitido o reenvio para um tipo de contato, e-mail ou celular
      operationId: reenviar-cobranca
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
              content:
                application/json:
                  schema:
                    "$ref": "#/components/schemas/ReenviarCobrancaRequest"
              required: true
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                cadastroUsuario:
                  value:
                    {
                      "erro":
                        {
                            "codigo": "RegraNaoAtendida",
                            "mensagem": "Alguma regra do sistema não foi atendida.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contrato/{contratoId}/beneficiarios:
    get:
      tags:
        - Contratos
      summary: Listar Beneficiários
      description: Retornar uma lista de beneficiários que estão associados a um contrato
      operationId: listar-beneficiarios
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                      type: object
                      "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ContratoBeneficiariosResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    put:
      tags:
        - Contratos
      summary: Atualizar Beneficiários
      description: Atualizar beneficiários que estão associados a um contrato
      operationId: atualizar-beneficiarios
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContratoBeneficiariosRequest"
      responses:
        "204":
          description: sucesso
          headers: {}
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /contrato/{contratoId}/documentos:
    get:
      tags:
        - Contratos
      summary: Obter Documentos Contrato
      description: Obter os documentos de um contrato
      operationId: obter-documentos-contrato
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/DocumentoContratoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
    post:
      tags:
        - Contratos
      summary: Upload Documentos Contrato
      description: Upload de documento que serão associados ao contrato
      operationId: upload-documentos-contrato
      parameters:
        - name: contratoId
          in: path
          description: Id do contrato
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DocumentoContratoRequest"
        required: true
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "422":
          description: unprocessable entity.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /documento/{documentoId}:
    delete:
      tags:
        - Contratos
      summary: Deletar documento
      description: deletar documento
      operationId: deletar-documento
      parameters:
        - name: documentoId
          in: path
          description: Id do documento
          required: true
          schema:
            allOf:
              - $ref: "#/components/schemas/Id"
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /pessoas/{pessoaId}/enderecos:
    post:
      tags:
        - Pessoas
      summary: Cadastrar um Endereço
      description: cadastrar endereco pessoa
      operationId: cadastrar endereco pessoa
      parameters:
        - name: pessoaId
          in: path
          description: Id da pessoa
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EnderecoDetalheRequest"
        required: true
      responses:
        "201":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      properties:
                        value:
                          description: Id do endereço
                          allOf:
                            - $ref: "#/components/schemas/Id"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
  /pessoa/{pessoaId}/telefones:
    post:
      tags:
        - Pessoas
      summary: Cadastrar ou Atualizar um Telefone
      description: Cadastrar ou atualizar o telefone de uma pessoa
      operationId: cadastrar-atualizar-telefone-pessoa
      parameters:
        - name: pessoaId
          in: path
          description: Id da pessoa
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PessoaTelefoneRequest"
      responses:
        "204":
          description: sucesso
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /pessoas-juridicas/cnpj/{cnpj}:
    get:
      tags:
        - Pessoas Jurídicas
      summary: Obter Pessoa Jurídica por CNPJ
      description: obter pessoa jurídica por cnpj
      operationId: obter-pessoa-juridica-cnpj
      parameters:
        - name: cnpj
          in: path
          description: CNPJ
          required: true
          schema:
            type: string
            format: number
            maxLength: 14
            minLength: 14
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/PessoaJuridicaResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "UnidadeVendaInexistente",
                          "mensagem": "Unidade de Venda inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /seguradoras/{id}/apolices:
    get:
      tags:
        - Seguradoras
      summary: Obter Apólices
      description: obter apólices
      operationId: obter-apolices
      parameters:
        - name: id
          in: path
          description: Id da seguradora
          required: true
          schema:
            allOf:
              - $ref: "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/SeguradoraDetalhe"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /apolices/{id}/planos:
    get:
      tags:
        - Apólices
      summary: Listar Planos
      description: listar planos
      operationId: listar-planos
      parameters:
        - name: id
          in: path
          description: Id da apólice
          required: true
          schema:
            allOf:
              - $ref: "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  meta:
                    type: object
                    "$ref": "#/components/schemas/Meta"
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/PlanoApoliceResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "404":
          description: não encontrado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro404"
              examples:
                usuarioInexistente:
                  value:
                    {
                      "erro":
                        {
                          "codigo": "ApoliceInexistente",
                          "mensagem": "Apólice inexistente.",
                        },
                    }
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []
  /clientes/{clienteId}/produtos/{produtoId}/planos:
    get:
      tags:
        - Produtos
      summary: Listar Planos do Produto com Restrições
      description: listar planos do produto com restrições
      operationId: listar-planos-produto-cliente
      parameters:
        - name: clienteId
          in: path
          description: Id do cliente
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
        - name: produtoId
          in: path
          description: Id do produto
          required: true
          schema:
            "$ref": "#/components/schemas/Id"
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                properties:
                  dados:
                    type: array
                    items:
                      "$ref": "#/components/schemas/ProdutoPlanoComRestricaoResponse"
        "403":
          description: acesso não autorizado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro403"
        "500":
          description: comportamento inesperado.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Erro500"
      security:
        - bearerAuth: []

components:
  schemas:
    Condicional:
        type: boolean
    Id:
      type: string
      format: uuid
    Cpf:
      type: string
      format: number
      maxLength: 11
      minLength: 11
    Meta:
      description: Parametros para paginação
      type: object
      properties:
        pagina:
          description: Página atual
          type: integer
        porPagina:
          description: Quantidade de itens desejado por página
          type: integer
        totalItens:
          description: Quantidade total de itens retornados
          type: integer
      example:
        pagina: 1
        porPagina: 10
        totalItens: 100
    Erro500:
      type: object
      properties:
        erro:
          type: object
          properties:
            codigo:
              type: string
              example: COMPORTAMENTOINESPERADO
            mensagem:
              type: string
              example: Ocorreu um erro inesperado, por favor tente novamente
    Erro400:
      type: object
      properties:
        erro:
          type: object
          properties:
            codigo:
              type: string
            mensagem:
              type: string
            detalhes:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/Erro400Detalhe"
    Erro400Detalhe:
      type: object
      properties:
        nome:
          type: string
        mensagem:
          type: string
    Erro401:
      type: object
      properties:
        erro:
          type: object
          properties:
            codigo:
              type: string
            mensagem:
              type: string
    Erro403:
      type: object
      properties:
        erro:
          type: object
          properties:
            codigo:
              type: string
              example: AcessoNaoAutorizado
            mensagem:
              type: string
              example: Acesso não autorizado.
    Erro404:
      type: object
      properties:
        erro:
          type: object
          properties:
            codigo:
              type: string
            mensagem:
              type: string
    TokenAcessoResponse:
      type: object
      properties:
        token:
          description: Token
          type: string
        expiracao:
          description: Expiração
          type: string
          format: date-time
          enum:
            - 01/07/2021 11:13:33
    LoginClientRequest:
      type: object
      properties:
        clientId:
          description: Client ID
          allOf:
            - $ref: "#/components/schemas/Id"
        secretKey:
          description: Secret key
          type: string
    LoginClientResponse:
      type: object
      properties:
        nome:
          description: Nome
          type: string
        primeiroAcesso:
          description: Primeiro acesso
          type: boolean
        tokenAcesso:
          description: Token de acesso
          allOf:
            - $ref: "#/components/schemas/TokenAcessoResponse"
        tokenAtualizacao:
          description: Token de acesso
          allOf:
            - $ref: "#/components/schemas/TokenAcessoResponse"
    LoginResponse:
      type: object
      properties:
        nome:
          description: Nome
          type: string
        primeiroAcesso:
          description: Primeiro acesso
          type: boolean
        recuperacaoSenha:
          description: Recuperação senha
          type: boolean
        canalVendaId:
          description: Id do canal de venda
          allOf:
            - $ref: "#/components/schemas/Id"
        tokenAcesso:
          description: Token de acesso
          type: string
        perfis:
          type: array
          items:
            $ref: "#/components/schemas/PerfilResponse"
    MenuResponse:
      type: object
      properties:
        icone:
          description: Icone
          type: string
        titulo:
          description: Título
          type: string
        rota:
          description: rota
          type: string
        menusFilho:
          type: array
          items:
            properties:
              titulo:
                description: Título
                type: string
              rota:
                description: rota
                type: string
    PerfilResponse:
      type: object
      properties:
        id:
          description: Id do perfil
          allOf:
            - $ref: "#/components/schemas/Id"
        descricao:
          description: Descrição
          type: string
    ScopeResponse:
      type: object
      properties:
        funcionalidade:
          description: Funcionalidade
          type: string
        scopes:
          type: array
          items:
            properties:
              titulo:
                description: Título
                type: string
    UsuarioResponse:
      type: object
      properties:
        id:
          description: Id do usuário
          allOf:
            - $ref: "#/components/schemas/Id"
        cpf:
          description: CPF
          type: string
          format: number
          maxLength: 11
          minLength: 11
        nome:
          description: Nome
          type: string
        email:
          description: Nome
          type: string
        celular:
          description: Nome
          type: string
        ativo:
          description: Primeiro acesso
          type: boolean
        bloqueado:
          description: Recuperação senha
          type: boolean
        perfis:
          type: array
          items:
            $ref: "#/components/schemas/PerfilResponse"
    UsuarioDetalhe:
      type: object
      properties:
        id:
          description: Id do usuário
          allOf:
            - $ref: "#/components/schemas/Id"
        cpf:
          description: CPF
          type: string
          format: number
          maxLength: 11
          minLength: 11
        nome:
          description: Nome
          type: string
        email:
          description: Nome
          type: string
        celular:
          description: Nome
          type: string
        ativo:
          description: Primeiro acesso
          type: boolean
        bloqueado:
          description: Recuperação senha
          type: boolean
        unidadeVenda:
          type: object
          properties:
            id:
              description: Id da unidade de venda
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
        contaBancaria:
          type: object
          $ref: "#/components/schemas/ContaBancariaUsuarioResponse"
        perfis:
          type: array
          items:
            $ref: "#/components/schemas/PerfilResponse"
    UsuarioBuscaCpfResponse:
      type: object
      properties:
        cpf:
          description: CPF
          type: string
          format: number
          maxLength: 11
          minLength: 11
        nome:
          description: Nome
          type: string
        email:
          description: Nome
          type: string
        celular:
          description: Nome
          type: string
    UsuarioRequest:
      type: object
      required:
        - nome
        - cpf
        - celular
        - email
        - perfisIds
      properties:
        cpf:
          description: CPF
          type: string
          format: number
          maxLength: 11
          minLength: 11
        nome:
          description: Nome
          type: string
        email:
          description: E-mail
          type: string
          format: email
        celular:
          description: Celular
          type: string
          format: number
        unidadeVendaId:
          description: Id da unidade venda
          allOf:
            - $ref: "#/components/schemas/Id"
        contaBancaria:
          type: object
          $ref: "#/components/schemas/ContaBancariaUsuarioResponse"
        perfisIds:
          type: array
          items:
            $ref: "#/components/schemas/Id"
    UsuarioAtualizarRequest:
      type: object
      required:
        - nome
        - celular
        - email
        - perfisIds
      properties:
        nome:
          description: Nome
          type: string
        email:
          description: E-mail
          type: string
          format: email
        celular:
          description: Celular
          type: string
          format: number
        unidadeVendaId:
          description: Id da unidade venda
          allOf:
            - $ref: "#/components/schemas/Id"
        contaBancaria:
          type: object
          $ref: "#/components/schemas/ContaBancariaUsuarioResponse"
        perfisIds:
          type: array
          items:
            $ref: "#/components/schemas/Id"
    NacionalidadeResponse:
      type: object
      properties:
        id:
          description: Id da nacionalidade
          allOf:
            - $ref: "#/components/schemas/Id"
        descrição:
          description: Descrição
          type: string
        codigoPais:
          description: Código do país
          type: string
    SeguradoraResponse:
      type: object
      properties:
        id:
          description: Id da seguradora
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
        cnpj:
          description: CNPJ
          type: string
        ativo:
          description: Ativo
          type: boolean
    SeguradoraDetalhe:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
        cnpj:
          description: CNPJ
          type: string
    SeguradoraDetalheResponse:
      type: object
      properties:
        id:
          description: Id da seguradora
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
    CorretoraResponse:
      type: object
      properties:
        id:
          description: Id da corretora
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
        cnpj:
          description: CNPJ
          type: string
        ativo:
          description: Ativo
          type: boolean
    EstipulanteResponse:
      type: object
      properties:
        id:
          description: Id do estipulante
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
        cnpj:
          description: CNPJ
          type: string
        ativo:
          description: Ativo
          type: boolean
    EventoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        icone:
          description: Icone
          type: string
        data:
          description: Data
          type: string
          format: date
        eventoTipo:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            descricao:
              description: Descrição
              type: string
    ContratoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        codigo:
          description: Código
          type: string
        codigoSeguradora:
          description: Código Seguradora
          type: string
        clienteId:
          description: Id do Cliente
          allOf:
            - $ref: "#/components/schemas/Id"
        status:
          description: Status
          type: string
          enum:
            - Ativo
            - CancelamentoManual
            - CancelamentoSistema
            - CanceladoSistema
            - CanceladoManual
            - Proposta
            - PropostaCancelada
            - Encerrado
        inicioVigencia:
          description: Início Vigência
          type: string
          format: date-time
          example: 26/01/2023 14:48:33
        fimVigencia:
          description: Início Vigência
          type: string
          format: date-time
          example: 26/01/2023 14:48:33
        metodoPagamento:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        quantidadeParcelas:
          description: Quantidade de Parcelas
          type: integer
        valorParcela:
          description: Valor da parcela
          type: number
          example: 10.45
        permiteReenvio:
          description: Permite reenvio
          type: boolean
        plano:
          type: object
          $ref: "#/components/schemas/ProdutoPlano"
        produtor:
          type: object
          $ref: "#/components/schemas/Produtor"
    Produtor:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
    Assistenciadora:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
    ComponenteAssistenciaPlano:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        assistenciadora:
          type: object
          $ref: "#/components/schemas/Assistenciadora"
    ComponenteSeguroPlano:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        seguradora:
          type: object
          $ref: "#/components/schemas/SeguradoraDetalheResponse"
    ProdutoPlano:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        produto:
          type: object
          $ref: "#/components/schemas/Produto"
        seguro:
          type: object
          $ref: "#/components/schemas/ComponenteSeguroPlano"
        assistencias:
          type: array
          items:
            $ref: "#/components/schemas/ComponenteAssistenciaPlano"
    CanalDistribuicaoResponse:
      type: object
      properties:
        id:
          description: Id do canal distribuição
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        ativo:
          description: Ativo
          type: boolean
        pessoaJuridica:
          type: object
          $ref: "#/components/schemas/PessoaJuridicaCadastrarResponse"
    CanalDistribuicaoRequest:
      type: object
      properties:
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        pessoaJuridica:
          type: object
          properties:
            cnpj:
              description: CNPJ
              type: string
            nomeFantasia:
              description: Nome fantasia
              type: string
            razaoSocial:
              description: Razão social
              type: string
        endereco:
          type: object
          properties:
            cidade:
              description: Cidade
              type: string
            estado:
              description: Estado
              type: string
            bairro:
              description: Bairro
              type: string
            logradouro:
              description: Logradouro
              type: string
            cep:
              description: Cep
              type: string
            complemento:
              description: Complemento
              type: string
            numero:
              description: Número
              type: string
    CanalDistribuicaoDetalheResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        ativo:
          description: Ativo
          type: boolean
        pessoaJuridica:
          type: object
          properties:
            cnpj:
              description: CNPJ
              type: string
            nomeFantasia:
              description: Nome fantasia
              type: string
            razaoSocial:
              description: Razão social
              type: string
        endereco:
          type: object
          $ref: "#/components/schemas/EnderecoDetalheResponse"
    CanalDistribuicaoAtualziarRequest:
      type: object
      properties:
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        pessoaJuridica:
          type: object
          properties:
            cnpj:
              description: CNPJ
              type: string
            nomeFantasia:
              description: Nome fantasia
              type: string
            razaoSocial:
              description: Razão social
              type: string
        endereco:
          type: object
          $ref: "#/components/schemas/EnderecoDetalheResponse"
    CanalVendaTipoResponse:
      type: object
      properties:
        id:
          description: Id do tipo do canal de venda
          allOf:
            - $ref: "#/components/schemas/Id"
        descricao:
          description: Descrição
          type: string
    ParceiroResponse:
      type: object
      properties:
        id:
          description: Id do parceiro
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
        cnpj:
          description: CNPJ
          type: string
        origemId:
          description: Id da origem
          allOf:
            - $ref: "#/components/schemas/Id"
        diretorioLogo:
          description: Diretório logo
          type: string
    PessoaJuridicaResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        cnpj:
          description: CNPJ
          type: string
        razaoSocial:
          description: Razão social
          type: string
        nomeFantasia:
          description: Nome fantasia
          type: string
        LojistaId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        diretorioLogo:
          description: Diretório logo
          type: string
    PessoaJuridicaAtualizarRequest:
      type: object
      properties:
        id:
          description: Id da pessoa jurídica
          allOf:
            - $ref: "#/components/schemas/Id"
        cnpj:
          description: CNPJ
          type: string
        razaoSocial:
          description: Razão social
          type: string
        nomeFantasia:
          description: Nome fantasia
          type: string
    PessoaJuridicaCadastrarResponse:
      type: object
      properties:
        cnpj:
          description: CNPJ
          type: string
        razaoSocial:
          description: Razão social
          type: string
        nomeFantasia:
          description: Nome fantasia
          type: string
    ClienteResponse:
      type: object
      properties:
        id:
          description: Id do cliente
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        cpf:
          type: string
          format: number
          maxLength: 11
          minLength: 11
        email:
          description: E-mail
          type: string
          format: email
        ativo:
          description: Ativo
          type: boolean
    ClienteDetalheResponse:
      type: object
      properties:
        id:
          description: Id do cliente
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        cpf:
          type: string
          format: number
          maxLength: 11
          minLength: 11
        email:
          description: E-mail
          type: string
          format: email
        sexo:
          description: Sexo
          type: string
          enum:
            - M
            - F
        estadoCivilId:
          description: Id do estado civil
          allOf:
            - $ref: "#/components/schemas/Id"
        dataNascimento:
          description: Data de nascimento
          type: string
          format: date
        ativo:
          description: Ativo
          type: boolean
        pep:
          description: Pessoa politicamente exposta
          type: boolean
        cargoPep:
          description: Cargo da pessoa politicamente exposta
          type: string
        rg:
          type: object
          properties:
            id:
              description: Id RG
              allOf:
                - $ref: "#/components/schemas/Id"
            orgaoEmissorId:
              description: Id do Orgão Emissor
              allOf:
                - $ref: "#/components/schemas/Id"
            ufId:
              description: Id da UF
              allOf:
                - $ref: "#/components/schemas/Id"
            dataEmissao:
              description: Data de emissão
              type: string
              format: date
            numero:
              description: Número
              type: string
              format: number
            uf:
              description: UF
              $ref: "#/components/schemas/UfResponse"
        celular:
          type: object
          properties:
            id:
              description: Id do celular
              allOf:
                - $ref: "#/components/schemas/Id"
            ddd:
              description: DDD
              type: string
              format: number
            numero:
              description: Número
              type: string
              format: number
            principal:
              description: Principal
              type: boolean
        telefone:
          type: object
          properties:
            id:
              description: Id do celular
              allOf:
                - $ref: "#/components/schemas/Id"
            ddd:
              description: DDD
              type: string
              format: number
            numero:
              description: Número
              type: string
              format: number
            principal:
              description: Principal
              type: boolean
        contaBancaria:
          $ref: "#/components/schemas/ContaBancariaResponse"
        enderecos:
          type: array
          items:
            type: object
            properties:
              id:
                description: Id do endereço
                allOf:
                  - $ref: "#/components/schemas/Id"
              cidade:
                description: Cidade
                type: string
              estado:
                description: Estado
                type: string
              bairro:
                description: Bairro
                type: string
              logradouro:
                description: Logradouro
                type: string
              cep:
                description: Cep
                type: string
              complemento:
                description: Complemento
                type: string
              numero:
                description: Número
                type: string
              tipo:
                description: Tipo
                type: string
                enum:
                  - Residencial
                  - Trabalho
              apelido:
                description: Apelido
                type: string
              principal:
                description: Principal
                type: boolean
        estadoCivilDescricao:
          description: Descrição do estado civil
          type: string
        orgaoEmissorDescricao:
          description: Descrição do orgão emissor
          type: string
        nacionalidade:
          $ref: "#/components/schemas/NacionalidadeResponse"
    ClienteAtualizarRequest:
      type: object
      required:
        - nome
        - cpf
        - email
        - dataNascimento
        - sexo
        - rg
        - estadoCivilId
      properties:
        nome:
          description: Nome
          type: string
        cpf:
          description: CPF
          allOf:
            - $ref: "#/components/schemas/Cpf"
        email:
          description: E-mail
          type: string
          format: email
        sexo:
          description: Sexo
          type: string
          enum:
            - M
            - F
        estadoCivilId:
          description: Id do estado civil
          allOf:
            - $ref: "#/components/schemas/Id"
        dataNascimento:
          description: Data de nascimento
          type: string
          format: date
        pep:
          description: Pessoa politicamente exposta
          type: boolean
        cargoPep:
          description: Cargo da pessoa politicamente exposta
          type: string
        nacionalidadeId:
          description: Id da nacionalidade
          allOf:
            - $ref: "#/components/schemas/Id"
        rg:
          type: object
          properties:
            id:
              description: Id RG
              allOf:
                - $ref: "#/components/schemas/Id"
            orgaoEmissorId:
              description: Id do Orgão Emissor
              allOf:
                - $ref: "#/components/schemas/Id"
            ufId:
              description: Id da UF
              allOf:
                - $ref: "#/components/schemas/Id"
            dataEmissao:
              description: Data de emissão
              type: string
              format: date
            numero:
              description: Número
              type: string
              format: number
        celular:
          type: object
          $ref: "#/components/schemas/TelefoneAtualizarRequest"
        telefone:
          type: object
          $ref: "#/components/schemas/TelefoneAtualizarRequest"
        contaBancaria:
          type: object
          $ref: "#/components/schemas/ContaBancariaResponse"
        enderecos:
          type: array
          items:
            type: object
            properties:
              id:
                description: Id do endereço
                allOf:
                  - $ref: "#/components/schemas/Id"
              cidade:
                description: Cidade
                type: string
              estado:
                description: Estado
                type: string
              bairro:
                description: Bairro
                type: string
              logradouro:
                description: Logradouro
                type: string
              cep:
                description: Cep
                type: string
              complemento:
                description: Complemento
                type: string
              numero:
                description: Número
                type: string
              tipo:
                description: Tipo
                type: string
                enum:
                  - Residencial
                  - Trabalho
              apelido:
                description: Apelido
                type: string
              principal:
                description: Principal
                type: boolean
    ClienteRequest:
      type: object
      required:
        - nome
        - cpf
        - email
        - dataNascimento
        - sexo
        - rg
        - estadoCivilId
      properties:
        nome:
          description: Nome
          type: string
        email:
          description: E-mail
          type: string
          format: email
        cpf:
          description: CPF
          type: string
        sexo:
          description: Sexo
          type: string
          enum:
            - M
            - F
        estadoCivilId:
          description: Id do estado civil
          allOf:
            - $ref: "#/components/schemas/Id"
        dataNascimento:
          description: Data de nascimento
          type: string
          format: date
        pep:
          description: Pessoa politicamente exposta
          type: boolean
        cargoPep:
          description: Cargo da pessoa politicamente exposta
          type: string
        nacionalidadeId:
          description: Id da nacionalidade
          allOf:
            - $ref: "#/components/schemas/Id"
        rg:
          type: object
          properties:
            orgaoEmissorId:
              description: Id do Orgão Emissor
              allOf:
                - $ref: "#/components/schemas/Id"
            ufId:
              description: Id da UF
              allOf:
                - $ref: "#/components/schemas/Id"
            dataEmissao:
              description: Data de emissão
              type: string
              format: date
            numero:
              description: Número
              type: string
              format: number
        contaBancaria:
          type: object
          $ref: "#/components/schemas/ContaBancariaRequest"
        celular:
          type: object
          $ref: "#/components/schemas/TelefoneRequest"
        telefone:
          type: object
          $ref: "#/components/schemas/TelefoneRequest"
        enderecos:
          type: array
          items:
            type: object
            properties:
              cidade:
                description: Cidade
                type: string
              estado:
                description: Estado
                type: string
              bairro:
                description: Bairro
                type: string
              logradouro:
                description: Logradouro
                type: string
              cep:
                description: Cep
                type: string
              complemento:
                description: Complemento
                type: string
              numero:
                description: Número
                type: string
              tipo:
                description: Tipo
                type: string
                enum:
                  - Residencial
                  - Trabalho
              apelido:
                description: Apelido
                type: string
              principal:
                description: Principal
                type: boolean
    EnderecoDetalheResponse:
      type: object
      properties:
        id:
          description: Id do endereço
          allOf:
            - $ref: "#/components/schemas/Id"
        cidade:
          description: Cidade
          type: string
        estado:
          description: Estado
          type: string
        bairro:
          description: Bairro
          type: string
        logradouro:
          description: Logradouro
          type: string
        cep:
          description: Cep
          type: string
        complemento:
          description: Complemento
          type: string
        numero:
          description: Número
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Residencial
            - Trabalho
    EnderecoPessoaDetalheResponse:
      type: object
      properties:
        id:
          description: Id do endereço
          allOf:
            - $ref: "#/components/schemas/Id"
        cidade:
          description: Cidade
          type: string
        estado:
          description: Estado
          type: string
        bairro:
          description: Bairro
          type: string
        logradouro:
          description: Logradouro
          type: string
        cep:
          description: Cep
          type: string
        complemento:
          description: Complemento
          type: string
        numero:
          description: Número
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Residencial
            - Trabalho
    EnderecoDetalheRequest:
      type: object
      properties:
        cidade:
          description: Cidade
          type: string
        estado:
          description: Estado
          type: string
        bairro:
          description: Bairro
          type: string
        logradouro:
          description: Logradouro
          type: string
        cep:
          description: Cep
          type: string
        complemento:
          description: Complemento
          type: string
        numero:
          description: Número
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Residencial
            - Trabalho
        apelido:
          description: Apelido
          type: string
    CadastroEnderecoRequest:
      type: object
      properties:
        cidade:
          description: Cidade
          type: string
        estado:
          description: Estado
          type: string
        bairro:
          description: Bairro
          type: string
        logradouro:
          description: Logradouro
          type: string
        cep:
          description: Cep
          type: string
        complemento:
          description: Complemento
          type: string
        numero:
          description: Número
          type: string
    BancoResponse:
      type: object
      properties:
        id:
          description: Id do banco
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        numeroFebraban:
          description: Número Febraban
          type: string
    ContaBancariaUsuarioResponse:
      type: object
      properties:
        bancoId:
          description: Id do banco
          allOf:
            - $ref: "#/components/schemas/Id"
        agencia:
          description: Agência
          type: string
        numero:
          description: Número
          type: string
        digito:
          description: Dígito
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Poupanca
            - Corrente
    ContaBancariaResponse:
      type: object
      properties:
        id:
          description: Id da conta bancaria
          allOf:
            - $ref: "#/components/schemas/Id"
        bancoId:
          description: Id do banco
          allOf:
            - $ref: "#/components/schemas/Id"
        agencia:
          description: Agência
          type: string
        numero:
          description: Número
          type: string
        digito:
          description: Dígito
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Poupanca
            - Corrente
        banco:
          description: Banco
          $ref: "#/components/schemas/BancoResponse"
    ContaBancariaRequest:
      type: object
      properties:
        bancoId:
          description: Id do banco
          allOf:
            - $ref: "#/components/schemas/Id"
        agencia:
          description: Agência
          type: string
        numero:
          description: Número
          type: string
        digito:
          description: Dígito
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Poupanca
            - Corrente
    EstadoCivilResponse:
      type: object
      properties:
        id:
          description: Id do estado civil
          allOf:
            - $ref: "#/components/schemas/Id"
        descricao:
          description: Descrição
          type: string
    OrgaoEmissorResponse:
      type: object
      properties:
        id:
          description: Id do orgão emissor
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
    UfResponse:
      type: object
      properties:
        id:
          description: Id da UF
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        sigla:
          description: Sigla
          type: string
    AssistenciadoraDetalheResponse:
      type: object
      properties:
        id:
          description: Id da assistenciadora
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
    AssistenciadoraResponse:
      type: object
      properties:
        id:
          description: Id da assistenciadora
          allOf:
            - $ref: "#/components/schemas/Id"
        nomeFantasia:
          description: Nome fantasia
          type: string
        razaoSocial:
          description: Razão social
          type: string
        assistencias:
          type: array
          items:
            type: object
            properties:
              id:
                description: Id da assistência
                allOf:
                  - $ref: "#/components/schemas/Id"
              nome:
                description: Nome
                type: string
              descricao:
                description: Descrição
                type: string
              valor:
                description: Valor
                type: number
                example: 1.90
    UnidadeVendaResponse:
      type: object
      properties:
        id:
          description: Id da unidade de venda
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Fisica
            - Virtual
        ativo:
          description: Ativo
          type: boolean
        canalDistribuicao:
          type: object
          properties:
          $ref: "#/components/schemas/CanalDistribuicaoResponse"
    UnidadeVendaRetorno:
      type: object
      properties:
        id:
          description: Id da unidade de venda
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Fisica
            - Virtual
        ativo:
          description: Ativo
          type: boolean
        canalDistribuicao:
          type: object
          $ref: "#/components/schemas/CanalDistribuicaoUnidadeVendaResponse"
        pessoaJuridica:
          type: object
          $ref: "#/components/schemas/PessoaJuridicaResponse"
        endereco:
          type: object
          $ref: "#/components/schemas/EnderecoPessoaDetalheResponse"
    UnidadeVendaAtualizarRequest:
      type: object
      required:
        - nome
        - tipo
        - canalDistribuicaoId
      properties:
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        tipo:
          description: Tipo
          type: string
          enum:
            - Fisica
            - Virtual
        canalDistribuicaoId:
          description: Id do canal de distribuição
          allOf:
            - $ref: "#/components/schemas/Id"
        pessoaJuridica:
          type: object
          $ref: "#/components/schemas/PessoaJuridicaAtualizarRequest"
        endereco:
          type: object
          $ref: "#/components/schemas/EnderecoDetalheResponse"
    CanalVendaResponse:
      type: object
      properties:
        id:
          description: Id do canal de venda
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
          enum:
            - Fisica
            - Virtual
        ativo:
          description: Ativo
          type: boolean
        tipo:
          type: object
          $ref: "#/components/schemas/CanalVendaTipoResponse"
    TemaParceiroResponse:
      type: object
      properties:
        urlLogo:
          description: Url da logo
          type: string
        urlFavico:
          description: Url do favico
          type: string
        titulo:
          description: Título
          type: string
        corPrimaria:
          description: Cor primária
          type: string
        corDestaque:
          description: Cor destaque
          type: string
        corErro:
          description: Cor erro
          type: string
    EnderecoCepResponse:
      type: object
      properties:
        cidade:
          description: Cidade
          type: string
        estado:
          description: Estado
          type: string
        bairro:
          description: Bairro
          type: string
        logradouro:
          description: Logradouro
          type: string
        cep:
          description: CEP
          type: string
    MetodosPagamentoResponse:
      type: object
      properties:
        id:
          description: Id do metódo de pagamento
          allOf:
            - $ref: "#/components/schemas/Id"
        descricao:
          description: Descrição
          type: string
        codigo:
          description: Código
          type: integer
    MetodosPagamentoDetalhe:
      type: object
      properties:
        id:
          description: Id do metódo de pagamento
          allOf:
            - $ref: "#/components/schemas/Id"
        descricao:
          description: Descrição
          type: string
        codigo:
          description: Código
          type: integer
    Ramo:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        descricao:
          description: Descrição
          type: string
        codigo:
          description: Código
          type: string
    Grupo:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        descricao:
          description: Descrição
          type: string
        codigo:
          description: Código
          type: string
    Produto:
      type: object
      properties:
        id:
          description: Id do produto
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
    ProdutoResponse:
      type: object
      properties:
        id:
          description: Id do produto
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        ativo:
          description: Ativo
          type: boolean
    ProdutoDetalheResponse:
      type: object
      properties:
        id:
          description: Id do produto
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        ativo:
          description: Ativo
          type: boolean
        apolice:
          description: Apólice
          type: object
          $ref: "#/components/schemas/ApoliceResponse"
        tiposCanaisVenda:
          type: array
          items:
            type: object
            properties:
              id:
                description: Id
                allOf:
                  - $ref: "#/components/schemas/Id"
              descricao:
                description: Descrição
                type: string
    ProdutoCanalVendaResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        imagem:
          description: Imagem
          type: string
        tipoPessoa:
          description: Tipo pessoa
          type: string
        modalidade:
          description: Modalidade
          type: string
        idadeMinima:
          description: Idade Minima
          type: string
        idadeMaxima:
          description: Idade Maxima
          type: string
        parametrizavel:
          description: Parametrizavel
          type: boolean
        vigenciaFixa:
          description: Vigência Fixa
          type: boolean
        cupom:
          description: Cupom
          type: string
        grupo:
          type: object
          $ref: "#/components/schemas/Grupo"
        ramo:
          type: object
          $ref: "#/components/schemas/Ramo"
        metodos_pagamento:
          type: array
          items:
            "$ref": "#/components/schemas/MetodosPagamentoDetalhe"
    ProdutoRequest:
      type: object
      required:
        - nome
        - descricao
        - tiposCanaisVendaIds
      properties:
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        produtoPlanos:
          type: array
          items:
            type: object
            properties:
              nome:
                description: Nome
                type: string
              precoVenda:
                description: Preço de venda
                type: number
                example: 1.4
              planoId:
                description: Id do plano
                allOf:
                  - $ref: "#/components/schemas/Id"
              assistenciasIds:
                type: array
                items:
                  $ref: "#/components/schemas/Id"
        tiposCanaisVendaIds:
          type: array
          items:
            $ref: "#/components/schemas/Id"
    ProdutoAtualizarRequest:
      type: object
      properties:
        id:
          description: Id do produto
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        produtoPlanos:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
            planoId:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            precoVenda:
              description: Preço de venda
              type: number
              example: 11.50
            assistenciasIds:
              type: array
              items:
                $ref: "#/components/schemas/Id"
        tiposCanaisVendaIds:
          type: array
          items:
            $ref: "#/components/schemas/Id"
    ProdutoPlanoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        valor:
          description: Valor
          type: number
          example: 10.30
        seguro:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
            descricao:
              description: Descrição
              type: string
            valor:
              description: Valor
              type: number
              example: 10.30
            seguradora:
              type: object
              $ref: "#/components/schemas/SeguradoraDetalheResponse"
            coberturas:
                type: array
                items:
                  $ref: "#/components/schemas/CoberturaResponse"
        assistencias:
          type: array
          items:
            properties:
              id:
                description: Id
                allOf:
                  - $ref: "#/components/schemas/Id"
              nome:
                description: Nome
                type: string
              descricao:
                description: Descrição
                type: string
              valor:
                description: Valor
                type: number
                example: 10.30
              assistenciadora:
                type: object
                $ref: "#/components/schemas/AssistenciadoraDetalheResponse"
              coberturas:
                type: array
                items:
                  $ref: "#/components/schemas/CoberturaResponse"
    ProdutoPlanoCoberturaResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        valor:
          description: Valor
          type: number
          example: 10.30
        seguro:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
            descricao:
              description: Descrição
              type: string
            seguradora:
              type: object
              $ref: "#/components/schemas/SeguradoraDetalheResponse"
        assistencias:
          type: array
          items:
            properties:
              id:
                description: Id
                allOf:
                  - $ref: "#/components/schemas/Id"
              nome:
                description: Nome
                type: string
              descricao:
                description: Descrição
                type: string
              assistenciadora:
                type: object
                $ref: "#/components/schemas/AssistenciadoraDetalheResponse"
    PoliticaComissionamentoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
    SolicitacaoCancelamentoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        motivo:
          description: Motivo
          type: string
        status:
          description: Status
          type: string
          enum:
            - Aberta
            - Rejeitada
            - Aprovada
        contrato:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            codigo:
              description: Código
              type: string
            status:
              description: Status
              type: string
            inicioVigencia:
              description: Inicio Vigência
              type: string
              format: date
            fimVigencia:
              description: Fim Vigência
              type: string
              format: date
        solicitante:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
    ApoliceResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        seguradora:
          type: object
          $ref: "#/components/schemas/SeguradoraDetalheResponse"
    PlanoApoliceResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        valor:
          description: Valor
          type: number
          example: 10.45
    UnidadeVendaRequest:
      type: object
      properties:
        canalDistribuicaoId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        tipo:
          description: Tipo
          type: string
        pessoaJuridica:
          type: object
          properties:
            cnpj:
              description: CNPJ
              type: string
            razaoSocial:
              description: Razão social
              type: string
            nomeFantasia:
              description: Nome fantasia
              type: string
        endereco:
          type: object
          properties:
            cidade:
              description: Cidade
              type: string
            estado:
              description: Estado
              type: string
            bairro:
              description: Bairro
              type: string
            logradouro:
              description: Logradouro
              type: string
            cep:
              description: CEP
              type: string
            complemento:
              description: Complemento
              type: string
            numero:
              description: Número
              type: string
    UnidadeVendaCadastroRequest:
      type: object
      properties:
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        tipo:
          description: Tipo
          type: string
        pessoaJuridica:
          type: object
          $ref: "#/components/schemas/PessoaJuridicaResponse"
        endereco:
          type: object
          $ref: "#/components/schemas/CadastroEnderecoRequest"
    ContratoRequest:
      type: object
      properties:
        clienteId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        clienteCpf:
          description: CPF
          type: string
          format: number
          maxLength: 11
          minLength: 11
        produtoPlanoId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        canalVendaId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        condicaoContratual:
          description: Condição contratual
          type: string
        metodoPagamentoId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        jsonRequest:
          description: Json request
          type: string
        pagamento:
          type: object
          properties:
            ddd:
              description: DDD
              type: string
            telefone:
              description: Telefone
              type: string
            email:
              description: E-mail
              type: string
              format: email
    CanalVendaRequest:
      type: object
      properties:
        tipoId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        ativo:
          description: Ativo
          type: boolean
    CanalVendaAtualizarRequest:
      type: object
      properties:
        tipoId:
          description: Id do tipo do canal de venda
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        ativo:
          description: Indica se o canal de venda está ativo ou inativo
          type: boolean
    ParcelasResponse:
      type: object
      properties:
        Id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        numero:
          description: Número sequencial que representa a ordem da parcela
          type: integer
        status:
          description: Satatus atual da parcela
          type: string
          enum:
          - EmAberto
          - Paga
          - Cancelada
          - EmAtraso
        valor:
          description: Valor da parcela
          type: number
          example: 10.45
        vencimento:
          description: Data de vencimento da parcela
          type: string
          format: date-time
          example: 26/01/2023 00:00:00
        pagamento:
          description: Data de pagamento da parcela
          type: string
          format: date-time
          example: 26/01/2023 14:48:33
        contratoId:
          description: Id do contrato ao qual a parcela está vinculada
          allOf:
            - $ref: "#/components/schemas/Id"
    ReenviarCobrancaRequest:
      type: object
      properties:
        pagador:
            type: object
            properties:
              ddd:
                description: DDD
                type: string
                format: number
              telefone:
                description: Telefone
                type: string
                format: number
              email:
                description: E-mail
                type: string
                format: email
    ProdutoDistribuicaoResponse:
      type: object
      properties:
        id:
          description: Id do produto distribuição
          allOf:
            - $ref: "#/components/schemas/Id"
        produtoId:
          description: Id do produto a ser distribuido
          allOf:
            - $ref: "#/components/schemas/Id"
        politicaComissionamento:
          description: Polita de comissionamento definida para a distribuição do produto
          type: object
          $ref: "#/components/schemas/PoliticaComissionamentoResponse"
        parceiro:
          type: object
          properties:
            id:
              description: Id do canal distribuição
              allOf:
                - $ref: "#/components/schemas/Id"
            cnpj:
              description: CNPJ
              type: string
            razaoSocial:
              description: Razão Social
              type: string
            nomeFantasia:
              description: Nome Fantasia
              type: string
        metodoPagamento:
          description: Metodo de pagamentos disponíveis para a aquisição do produto
          type: object
          $ref: "#/components/schemas/MetodosPagamentoResponse"
        ativo:
          description: Indica se a distribuição do produto está ativo ou inativo
          type: boolean
    ProdutoDistribuicaoRequest:
      type: object
      required:
        - parceiroId
        - politicaComissionamentoId
        - metodosPagamentoIds
      properties:
        parceiroId:
          description: Id do parceiro que irá distribuir
          allOf:
            - $ref: "#/components/schemas/Id"
        politicaComissionamentoId:
          description: Id da politica de comissionamento a ser utilizada
          allOf:
            - $ref: "#/components/schemas/Id"
        metodosPagamentoIds:
          description: Metodos de pagamentos a serem aceitos na distribuição do produto
          type: array
          items:
            $ref: "#/components/schemas/Id"
    ProdutoCanalDistribuicaoResponse:
      type: object
      properties:
        id:
          description: Id do produto distribuição
          allOf:
            - $ref: "#/components/schemas/Id"
        produtoId:
          description: Id do produto a ser distribuido
          allOf:
            - $ref: "#/components/schemas/Id"
        ativo:
          description: Ativo
          type: boolean
        politicaComissionamento:
          type: object
          properties:
            id:
              description: Id da politica de camissionamento
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
            descricao:
              description: Descrição
              type: string
        metodosPagamento:
          type: array
          items:
            type: object
            properties:
              id:
                description: Id
                allOf:
                  - $ref: "#/components/schemas/Id"
              codigo:
                description: Código
                type: string
              descricao:
                description: Descrição
                type: string
        canalDistribuicao:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
            descricao:
              description: Descrição
              type: string
    ProdutoCanalDistribuicaoRequest:
      type: object
      required:
        - politicaComissionamentoId
        - canalDistribuicaoId
        - metodosPagamentoIds
      properties:
        politicaComissionamentoId:
          description: Id da politica de comissionamento a ser utilizada
          allOf:
            - $ref: "#/components/schemas/Id"
        canalDistribuicaoId:
          description: Id do canal de distribuição
          allOf:
            - $ref: "#/components/schemas/Id"
        metodosPagamentoIds:
          description: Metodos de pagamentos a serem aceitos na distribuição do produto
          type: array
          items:
            $ref: "#/components/schemas/Id"
    CobrancaRecorrenteConfirmarRequest:
      type: object
      properties:
        recorrencia:
          type: object
          properties:
            id_recorrencia:
              description: Id
              type: string
              allOf:
                - $ref: "#/components/schemas/Id"
            id_checkout:
              description: Id do checkout gerado para o pagamento da cobrança
              type: string
              allOf:
                - $ref: "#/components/schemas/Id"
            status:
              description: Código do status
              type: integer
            status_mensagem:
              description: Descrição do status
              type: string
            proxima_recorrencia:
              description: Data do agendamento da próxima cobrança, 2022-03-16
              type: string
              format: date
            dia_cobranca:
              description: Dia do mês agendado para a cobrança
              type: integer
            fim_recorrencia:
              description: Data do fim da recorrência, caso ativa enviar null
              type: string
            numero_pedido:
              description: Identificação do pedido, número do contrato interno
              type: string
        transacao:
          type: object
          properties:
            id_transacao:
              description: Id
              type: string
              allOf:
                - $ref: "#/components/schemas/Id"
            valor:
              description: Valor da transação expresso em centavos
              type: integer
            data:
              description: Data e hora em que ocorreu a transação, 2022-02-16T17:29:46-03:00
              type: string
              format: date-time
            nsu:
              description: NSU da transação
              type: string
            quantidade_parcelas:
              description: Descrição
              type: integer
            referencia:
              type: string
              allOf:
                - $ref: "#/components/schemas/Id"
            cartao:
              type: object
              properties:
                numero:
                  description: Número do cartão mascarado
                  type: string
                bandeira:
                  description: Bandeira do cartão
                  type: string
    CobrancaInformarLinkExpiradoRequest:
      type: object
      properties:
        pagamentos:
          type: array
          items:
            type: object
            properties:
              checkoutId:
                description: Id do checkout gerado para o pagamento da cobrança
                type: string
              dataInativacao:
                description: Data em que o link foi inativado
                type: string
                format: date-time
                allOf:
                  - $ref: "#/components/schemas/Id"
              referencia:
                type: string
                allOf:
                  - $ref: "#/components/schemas/Id"
    ContratoBeneficiariosResponse:
      type: object
      properties:
        id:
          type: string
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        cpf:
          description: Cpf
          type: string
          allOf:
            - $ref: "#/components/schemas/Cpf"
        dataNascimento:
          description: Data de nascimento
          type: string
          format: date
        grauParentesco:
          description: Descrição do grau de parentesco
          type: string
        percentual:
          description: Percentual
          type: integer
    ContratoBeneficiariosRequest:
      type: object
      properties:
        beneficiarios:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                allOf:
                  - $ref: "#/components/schemas/Id"
              nome:
                description: Nome
                type: string
              cpf:
                description: Cpf
                type: string
                allOf:
                  - $ref: "#/components/schemas/Cpf"
              dataNascimento:
                description: Data de nascimento
                type: string
                format: date
              grauParentesco:
                description: Descrição do grau de parentesco
                type: string
              percentual:
                description: Percentual
                type: integer
    CanalDistribuicaoProdutoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        descricao:
          description: Descrição
          type: string
        imagem:
          description: Imagem
          type: string
        tipoPessoa:
          description: Tipo pessoa
          type: string
        modalidade:
          description: Modalidade
          type: string
        idadeMinima:
          description: Idade Minima
          type: string
        idadeMaxima:
          description: Idade Maxima
          type: string
        parametrizavel:
          description: Parametrizavel
          type: boolean
        vigenciaFixa:
          description: Vigência Fixa
          type: boolean
        lojista_id:
          description: Id do lojista
          allOf:
            - $ref: "#/components/schemas/Id"
        grupo:
          type: object
          $ref: "#/components/schemas/Grupo"
        ramo:
          type: object
          $ref: "#/components/schemas/Ramo"
        metodos_pagamento:
          type: array
          items:
            "$ref": "#/components/schemas/MetodosPagamentoDetalhe"
    CanalDistribuicaoUnidadeVendaResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
    DocumentoContratoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        extensao:
          description: Extensão do documento
          type: string
        link:
          description: Link para acessar o documento
          type: string
        dataCadastro:
          description: Data de cadastro do documento "02/04/2022 18:21:46"
          type: string
          example: 02/04/2022 18:21:46
    DocumentoContratoRequest:
      type: object
      properties:
        documento:
          description: Arquivo em formato base64
          type: string
          format: base64
        documentoInformacao:
          type: object
          properties:
            nome:
              description: Nome
              type: string
            extensao:
              description: Extensão do documento
              type: string
              enum:
                - pdf
                - jpg
                - jpeg
                - png
    PessoaTelefoneRequest:
      type: object
      properties:
        telefones:
          type: array
          items:
            type: object
            properties:
              id:
                description: Id do telefone
                allOf:
                  - $ref: "#/components/schemas/Id"
              ddd:
                description: DDD
                type: string
                format: number
              numero:
                description: Número
                type: string
                format: number
              principal:
                description: Principal
                type: boolean
    TelefoneRequest:
      type: object
      properties:
        ddd:
          description: DDD
          type: string
          format: number
        numero:
          description: Número
          type: string
          format: number
        principal:
          description: Principal
          type: boolean
    TelefoneAtualizarRequest:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        ddd:
          description: DDD
          type: string
          format: number
        numero:
          description: Número
          type: string
          format: number
        principal:
          description: Principal
          type: boolean
    ProdutoPlanoComRestricaoResponse:
      type: object
      properties:
        id:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        nome:
          description: Nome
          type: string
        valor:
          description: Valor
          type: number
          example: 10.30
        seguro:
          type: object
          properties:
            id:
              description: Id
              allOf:
                - $ref: "#/components/schemas/Id"
            nome:
              description: Nome
              type: string
            descricao:
              description: Descrição
              type: string
            valor:
              description: Valor
              type: number
              example: 10.30
            seguradora:
              type: object
              $ref: "#/components/schemas/SeguradoraDetalheResponse"
            coberturas:
                type: array
                items:
                  $ref: "#/components/schemas/CoberturaResponse"
        assistencias:
          type: array
          items:
            properties:
              id:
                description: Id
                allOf:
                  - $ref: "#/components/schemas/Id"
              nome:
                description: Nome
                type: string
              descricao:
                description: Descrição
                type: string
              valor:
                description: Valor
                type: number
                example: 10.30
              assistenciadora:
                type: object
                $ref: "#/components/schemas/AssistenciadoraDetalheResponse"
              coberturas:
                type: array
                items:
                  $ref: "#/components/schemas/CoberturaResponse"
        restricoes:
          type: array
          items:
            type: string
    CoberturaResponse:
      type: object
      properties:
        nome:
          description: Nome
          type: string
        valor:
          description: Valor
          type: number
          example: 10.30
        resumo:
          description: Resumo
          type: string
        nomeImagem:
          description: Nome da Imagem
          type: string
        tipo:
          description: Status
          type: string
          enum:
            - Apolice
            - Assistencia
            - Sorteio
            - Seguro
    CodigoConfirmacaoResponse:
      type: object
      properties:
        enviado:
          description: Enviado
          type: boolean
        telefone:
          description: Telefone
          type: string
        bloqueado:
          description: Bloqueado
          type: boolean
        dataDesbloqueio:
          description: Data desbloqueio
          type: string
        dataValidade:
          description: Data validade
          type: string
        validado:
          description: Validado
          type: boolean
        expirado:
          description: Expirado
          type: boolean
    DadosUsuarioAutoContratacao:
      type: object
      properties:
        cpf:
          description: Cpf
          type: string
        origemAtual:
          description: Origem atual
          type: boolean
        apenasOutraOrigem:
          description: Apenas outra origem
          type: boolean
        confirmado:
          description: Confirmado
          type: boolean   
    UsuarioCadastroComSenha:
      type: object
      required:
        - cpf
        - nome
        - email
        - celular
        - senha
        - confirmacaoSenha
      properties:
        cpf:
          description: CPF
          type: string
          format: number
          maxLength: 11
          minLength: 11
        nome:
          description: Nome
          type: string
        email:
          description: E-mail
          type: string
          format: email
        celular:
          description: Celular
          type: string
          format: number     
        senha:
          description: Senha
          type: string
        confirmacaoSenha:
          description: Confirmação senha
          type: string
    ContratoCadastroAutoContratacao:
      type: object
      properties:
        clienteCpf:
          description: CPF
          type: string
          format: number
          maxLength: 11
          minLength: 11
        produtoPlanoId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        condicaoContratual:
          description: Condição contratual
          type: string
        metodoPagamentoId:
          description: Id
          allOf:
            - $ref: "#/components/schemas/Id"
        jsonRequest:
          description: Json request
          type: string         
    PagamentoContratoAutoContratacao:
      type: object
      properties:
        cartaoCredito:
          type: object
          $ref: "#/components/schemas/CartaoCredito"
    CartaoCredito:
      type: object
      properties:
        portador:
          description: Portador
          type: string
        numeroCartao:
          description: Número cartão de crédito
          type: string
        cvv:
          description: Cvv
          type: string
        vencimento:
          description: Vencimento
          type: string
          format: date
          example: 10/2022        
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT